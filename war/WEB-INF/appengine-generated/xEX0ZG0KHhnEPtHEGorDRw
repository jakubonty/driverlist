-----------------------------------------------------------------
Jmeno repozitare: tpj-motycjak
Cislo domaciho ukolu: 3
Datum spusteni testu: 201211220005
---
Vystup svn info
Path: .
URL: http://cvut.repositoryhosting.com/svn/cvut_tpj-motycjak
Repository Root: http://cvut.repositoryhosting.com/svn/cvut_tpj-motycjak
Repository UUID: 0d22a61f-41a5-46a7-9956-515ef4f8a663
Revision: 56
Node Kind: directory
Schedule: normal
Last Changed Author: tpj_motycjak
Last Changed Rev: 56
Last Changed Date: 2012-11-21 22:59:52 +0100 (Wed, 21 Nov 2012)

---
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new TopType()));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new TypeVariable("a")));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new TypeVariable("b")));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new TypeVariable("c")));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new TypeVariable("d")));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ReferenceType(new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(false, (new RecursiveType("a, new TopType()")).equalsTo(new RecursiveType("a, new TopType()")));
Assert.assertEquals(false, (new RecursiveType("a, new TopType()")).equalsTo(new RecursiveType("b, new TopType()")));
Assert.assertEquals(false, (new RecursiveType("a, new TopType()")).equalsTo(new RecursiveType("c, new TopType()")));
Assert.assertEquals(false, (new RecursiveType("a, new TopType()")).equalsTo(new RecursiveType("d, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ReferenceType(new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new RecursiveType("a, new TypeVariable("a")")));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new RecursiveType("b, new TypeVariable("a")")));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new RecursiveType("c, new TypeVariable("a")")));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new RecursiveType("d, new TypeVariable("a")")));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ReferenceType(new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new RecursiveType("a, new TypeVariable("b")")));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new RecursiveType("b, new TypeVariable("b")")));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new RecursiveType("c, new TypeVariable("b")")));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new RecursiveType("d, new TypeVariable("b")")));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ReferenceType(new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new RecursiveType("a, new TypeVariable("c")")));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new RecursiveType("b, new TypeVariable("c")")));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new RecursiveType("c, new TypeVariable("c")")));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new RecursiveType("d, new TypeVariable("c")")));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ReferenceType(new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new RecursiveType("a, new TypeVariable("d")")));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new RecursiveType("b, new TypeVariable("d")")));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new RecursiveType("c, new TypeVariable("d")")));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new RecursiveType("d, new TypeVariable("d")")));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new TopType()));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new TypeVariable("a")));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new TypeVariable("b")));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new TypeVariable("c")));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new TypeVariable("d")));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ReferenceType(new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(false, (new RecursiveType("b, new TopType()")).equalsTo(new RecursiveType("a, new TopType()")));
Assert.assertEquals(false, (new RecursiveType("b, new TopType()")).equalsTo(new RecursiveType("b, new TopType()")));
Assert.assertEquals(false, (new RecursiveType("b, new TopType()")).equalsTo(new RecursiveType("c, new TopType()")));
Assert.assertEquals(false, (new RecursiveType("b, new TopType()")).equalsTo(new RecursiveType("d, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ReferenceType(new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new RecursiveType("a, new TypeVariable("a")")));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new RecursiveType("b, new TypeVariable("a")")));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new RecursiveType("c, new TypeVariable("a")")));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new RecursiveType("d, new TypeVariable("a")")));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ReferenceType(new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new RecursiveType("a, new TypeVariable("b")")));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new RecursiveType("b, new TypeVariable("b")")));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new RecursiveType("c, new TypeVariable("b")")));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new RecursiveType("d, new TypeVariable("b")")));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ReferenceType(new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new RecursiveType("a, new TypeVariable("c")")));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new RecursiveType("b, new TypeVariable("c")")));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new RecursiveType("c, new TypeVariable("c")")));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new RecursiveType("d, new TypeVariable("c")")));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ReferenceType(new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new RecursiveType("a, new TypeVariable("d")")));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new RecursiveType("b, new TypeVariable("d")")));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new RecursiveType("c, new TypeVariable("d")")));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new RecursiveType("d, new TypeVariable("d")")));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new TopType()));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new TypeVariable("a")));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new TypeVariable("b")));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new TypeVariable("c")));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new TypeVariable("d")));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ReferenceType(new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(false, (new RecursiveType("c, new TopType()")).equalsTo(new RecursiveType("a, new TopType()")));
Assert.assertEquals(false, (new RecursiveType("c, new TopType()")).equalsTo(new RecursiveType("b, new TopType()")));
Assert.assertEquals(false, (new RecursiveType("c, new TopType()")).equalsTo(new RecursiveType("c, new TopType()")));
Assert.assertEquals(false, (new RecursiveType("c, new TopType()")).equalsTo(new RecursiveType("d, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ReferenceType(new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new RecursiveType("a, new TypeVariable("a")")));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new RecursiveType("b, new TypeVariable("a")")));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new RecursiveType("c, new TypeVariable("a")")));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new RecursiveType("d, new TypeVariable("a")")));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ReferenceType(new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new RecursiveType("a, new TypeVariable("b")")));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new RecursiveType("b, new TypeVariable("b")")));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new RecursiveType("c, new TypeVariable("b")")));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new RecursiveType("d, new TypeVariable("b")")));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ReferenceType(new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new RecursiveType("a, new TypeVariable("c")")));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new RecursiveType("b, new TypeVariable("c")")));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new RecursiveType("c, new TypeVariable("c")")));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new RecursiveType("d, new TypeVariable("c")")));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ReferenceType(new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new RecursiveType("a, new TypeVariable("d")")));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new RecursiveType("b, new TypeVariable("d")")));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new RecursiveType("c, new TypeVariable("d")")));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new RecursiveType("d, new TypeVariable("d")")));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new TopType()));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new TypeVariable("a")));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new TypeVariable("b")));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new TypeVariable("c")));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new TypeVariable("d")));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ReferenceType(new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(false, (new RecursiveType("d, new TopType()")).equalsTo(new RecursiveType("a, new TopType()")));
Assert.assertEquals(false, (new RecursiveType("d, new TopType()")).equalsTo(new RecursiveType("b, new TopType()")));
Assert.assertEquals(false, (new RecursiveType("d, new TopType()")).equalsTo(new RecursiveType("c, new TopType()")));
Assert.assertEquals(false, (new RecursiveType("d, new TopType()")).equalsTo(new RecursiveType("d, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ReferenceType(new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new RecursiveType("a, new TypeVariable("a")")));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new RecursiveType("b, new TypeVariable("a")")));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new RecursiveType("c, new TypeVariable("a")")));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new RecursiveType("d, new TypeVariable("a")")));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ReferenceType(new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new RecursiveType("a, new TypeVariable("b")")));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new RecursiveType("b, new TypeVariable("b")")));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new RecursiveType("c, new TypeVariable("b")")));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new RecursiveType("d, new TypeVariable("b")")));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ReferenceType(new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new RecursiveType("a, new TypeVariable("c")")));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new RecursiveType("b, new TypeVariable("c")")));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new RecursiveType("c, new TypeVariable("c")")));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new RecursiveType("d, new TypeVariable("c")")));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ReferenceType(new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new RecursiveType("a, new TypeVariable("d")")));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new RecursiveType("b, new TypeVariable("d")")));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new RecursiveType("c, new TypeVariable("d")")));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new RecursiveType("d, new TypeVariable("d")")));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TopType()")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new TopType()));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new TypeVariable("a")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new TypeVariable("b")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new TypeVariable("c")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new TypeVariable("d")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ReferenceType(new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new RecursiveType("a, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new RecursiveType("b, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new RecursiveType("c, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new RecursiveType("d, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ReferenceType(new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ReferenceType(new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ReferenceType(new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ReferenceType(new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new TopType()));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new TypeVariable("a")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new TypeVariable("b")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new TypeVariable("c")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new TypeVariable("d")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ReferenceType(new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new RecursiveType("a, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new RecursiveType("b, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new RecursiveType("c, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new RecursiveType("d, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ReferenceType(new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),));
(recursive b.a).equalsTo((recursive b.a)) should have returned true.
(recursive b.a).equalsTo((recursive c.a)) should have returned true.
(recursive b.a).equalsTo((recursive d.a)) should have returned true.
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ReferenceType(new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ReferenceType(new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ReferenceType(new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new TopType()));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new TypeVariable("a")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new TypeVariable("b")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new TypeVariable("c")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new TypeVariable("d")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ReferenceType(new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new RecursiveType("a, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new RecursiveType("b, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new RecursiveType("c, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new RecursiveType("d, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ReferenceType(new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),));
(recursive c.a).equalsTo((recursive b.a)) should have returned true.
(recursive c.a).equalsTo((recursive c.a)) should have returned true.
(recursive c.a).equalsTo((recursive d.a)) should have returned true.
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ReferenceType(new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ReferenceType(new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ReferenceType(new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new TopType()));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new TypeVariable("a")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new TypeVariable("b")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new TypeVariable("c")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new TypeVariable("d")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ReferenceType(new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new RecursiveType("a, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new RecursiveType("b, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new RecursiveType("c, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new RecursiveType("d, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ReferenceType(new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),));
(recursive d.a).equalsTo((recursive b.a)) should have returned true.
(recursive d.a).equalsTo((recursive c.a)) should have returned true.
(recursive d.a).equalsTo((recursive d.a)) should have returned true.
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ReferenceType(new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ReferenceType(new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ReferenceType(new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("a")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new TopType()));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new TypeVariable("a")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new TypeVariable("b")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new TypeVariable("c")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new TypeVariable("d")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ReferenceType(new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new RecursiveType("a, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new RecursiveType("b, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new RecursiveType("c, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new RecursiveType("d, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ReferenceType(new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ReferenceType(new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),));
(recursive a.b).equalsTo((recursive a.b)) should have returned true.
(recursive a.b).equalsTo((recursive c.b)) should have returned true.
(recursive a.b).equalsTo((recursive d.b)) should have returned true.
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ReferenceType(new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ReferenceType(new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new TopType()));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new TypeVariable("a")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new TypeVariable("b")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new TypeVariable("c")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new TypeVariable("d")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ReferenceType(new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new RecursiveType("a, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new RecursiveType("b, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new RecursiveType("c, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new RecursiveType("d, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ReferenceType(new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ReferenceType(new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ReferenceType(new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ReferenceType(new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new TopType()));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new TypeVariable("a")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new TypeVariable("b")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new TypeVariable("c")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new TypeVariable("d")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ReferenceType(new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new RecursiveType("a, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new RecursiveType("b, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new RecursiveType("c, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new RecursiveType("d, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ReferenceType(new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ReferenceType(new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),));
(recursive c.b).equalsTo((recursive a.b)) should have returned true.
(recursive c.b).equalsTo((recursive c.b)) should have returned true.
(recursive c.b).equalsTo((recursive d.b)) should have returned true.
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ReferenceType(new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ReferenceType(new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new TopType()));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new TypeVariable("a")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new TypeVariable("b")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new TypeVariable("c")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new TypeVariable("d")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ReferenceType(new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new RecursiveType("a, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new RecursiveType("b, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new RecursiveType("c, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new RecursiveType("d, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ReferenceType(new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ReferenceType(new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),));
(recursive d.b).equalsTo((recursive a.b)) should have returned true.
(recursive d.b).equalsTo((recursive c.b)) should have returned true.
(recursive d.b).equalsTo((recursive d.b)) should have returned true.
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ReferenceType(new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ReferenceType(new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("b")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new TopType()));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new TypeVariable("a")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new TypeVariable("b")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new TypeVariable("c")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new TypeVariable("d")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ReferenceType(new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new RecursiveType("a, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new RecursiveType("b, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new RecursiveType("c, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new RecursiveType("d, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ReferenceType(new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ReferenceType(new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ReferenceType(new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),));
(recursive a.c).equalsTo((recursive a.c)) should have returned true.
(recursive a.c).equalsTo((recursive b.c)) should have returned true.
(recursive a.c).equalsTo((recursive d.c)) should have returned true.
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ReferenceType(new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new TopType()));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new TypeVariable("a")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new TypeVariable("b")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new TypeVariable("c")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new TypeVariable("d")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ReferenceType(new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new RecursiveType("a, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new RecursiveType("b, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new RecursiveType("c, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new RecursiveType("d, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ReferenceType(new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ReferenceType(new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ReferenceType(new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),));
(recursive b.c).equalsTo((recursive a.c)) should have returned true.
(recursive b.c).equalsTo((recursive b.c)) should have returned true.
(recursive b.c).equalsTo((recursive d.c)) should have returned true.
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ReferenceType(new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new TopType()));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new TypeVariable("a")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new TypeVariable("b")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new TypeVariable("c")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new TypeVariable("d")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ReferenceType(new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new RecursiveType("a, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new RecursiveType("b, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new RecursiveType("c, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new RecursiveType("d, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ReferenceType(new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ReferenceType(new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ReferenceType(new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ReferenceType(new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new TopType()));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new TypeVariable("a")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new TypeVariable("b")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new TypeVariable("c")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new TypeVariable("d")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ReferenceType(new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new RecursiveType("a, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new RecursiveType("b, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new RecursiveType("c, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new RecursiveType("d, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ReferenceType(new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ReferenceType(new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ReferenceType(new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),));
(recursive d.c).equalsTo((recursive a.c)) should have returned true.
(recursive d.c).equalsTo((recursive b.c)) should have returned true.
(recursive d.c).equalsTo((recursive d.c)) should have returned true.
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ReferenceType(new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("c")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new TopType()));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new TypeVariable("a")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new TypeVariable("b")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new TypeVariable("c")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new TypeVariable("d")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ReferenceType(new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new RecursiveType("a, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new RecursiveType("b, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new RecursiveType("c, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new RecursiveType("d, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ReferenceType(new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ReferenceType(new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ReferenceType(new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ReferenceType(new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),));
(recursive a.d).equalsTo((recursive a.d)) should have returned true.
(recursive a.d).equalsTo((recursive b.d)) should have returned true.
(recursive a.d).equalsTo((recursive c.d)) should have returned true.
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("a, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new TopType()));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new TypeVariable("a")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new TypeVariable("b")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new TypeVariable("c")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new TypeVariable("d")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ReferenceType(new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new RecursiveType("a, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new RecursiveType("b, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new RecursiveType("c, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new RecursiveType("d, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ReferenceType(new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ReferenceType(new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ReferenceType(new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ReferenceType(new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),));
(recursive b.d).equalsTo((recursive a.d)) should have returned true.
(recursive b.d).equalsTo((recursive b.d)) should have returned true.
(recursive b.d).equalsTo((recursive c.d)) should have returned true.
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("b, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new TopType()));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new TypeVariable("a")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new TypeVariable("b")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new TypeVariable("c")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new TypeVariable("d")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ReferenceType(new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new RecursiveType("a, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new RecursiveType("b, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new RecursiveType("c, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new RecursiveType("d, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ReferenceType(new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ReferenceType(new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ReferenceType(new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ReferenceType(new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),));
(recursive c.d).equalsTo((recursive a.d)) should have returned true.
(recursive c.d).equalsTo((recursive b.d)) should have returned true.
(recursive c.d).equalsTo((recursive c.d)) should have returned true.
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("c, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new TopType()));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new TypeVariable("a")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new TypeVariable("b")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new TypeVariable("c")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new TypeVariable("d")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ReferenceType(new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new RecursiveType("a, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new RecursiveType("b, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new RecursiveType("c, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new RecursiveType("d, new TopType()")));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TopType(), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TopType(),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TopType(), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ReferenceType(new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("a"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("a"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ReferenceType(new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("b"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("b"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ReferenceType(new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("c"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("c"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ReferenceType(new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TopType(),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TopType())));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("a"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("a"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("b"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("b"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("c"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("c"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new FunctionType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new ProductType(new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l1", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l2", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l3", new TypeVariable("d"), new TypeVariable("d"))));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(RecordType types: new TypeVariable("d"),new TypeVariable("d"),));
Assert.assertEquals(true, (new RecursiveType("d, new TypeVariable("d")")).equalsTo(new UniversalType("l4", new TypeVariable("d"), new TypeVariable("d"))));
ENV : 
a t: new TypeVariable("a")
ENV : 
d t: new TypeVariable("e")
ENV : 
a t: new TopType()
b t: new TopType()
c t: new TopType()
ENV : 
b t: new TopType()
c t: new TopType()
ENV : 
c t: new TopType()
ENV : 
ENV : 
a t: new TopType()
c t: new TopType()
d t: new TopType()
ENV : 
c t: new TopType()
d t: new TopType()
ENV : 
d t: new TopType()
ENV : 
ENV : 
a t: new TopType()
b t: new TopType()
d t: new TopType()
ENV : 
b t: new TopType()
d t: new TopType()
ENV : 
d t: new TopType()
ENV : 
ENV : 
b t: new TopType()
c t: new TopType()
d t: new TopType()
ENV : 
c t: new TopType()
d t: new TopType()
ENV : 
d t: new TopType()
ENV : 
ENV : 
b t: new TypeVariable("d")
c t: new TopType()
d t: new TopType()
ENV : 
b t: new TypeVariable("d")
d t: new TopType()
ENV : 
b t: new TypeVariable("d")
ENV : 
b t: new TypeVariable("d")
c t: new TopType()
ENV : 
b t: new TypeVariable("d")
Top.isWellFormedTypeIn({b <: d, c <: Top, d <: Top}) should have returned true.
ENV : 
a t: new TypeVariable("d")
b t: new TopType()
d t: new TopType()
ENV : 
a t: new TypeVariable("d")
d t: new TopType()
ENV : 
a t: new TypeVariable("d")
ENV : 
a t: new TypeVariable("d")
b t: new TopType()
ENV : 
a t: new TypeVariable("d")
Top.isWellFormedTypeIn({a <: d, b <: Top, d <: Top}) should have returned true.
ENV : 
b t: new TopType()
c t: new TopType()
d t: new TypeVariable("c")
ENV : 
c t: new TopType()
d t: new TypeVariable("c")
ENV : 
d t: new TypeVariable("c")
ENV : 
b t: new TopType()
d t: new TypeVariable("c")
ENV : 
d t: new TypeVariable("c")
Top.isWellFormedTypeIn({b <: Top, c <: Top, d <: c}) should have returned true.
ENV : 
a t: new TopType()
c t: new TypeVariable("d")
d t: new TopType()
ENV : 
c t: new TypeVariable("d")
d t: new TopType()
ENV : 
c t: new TypeVariable("d")
ENV : 
a t: new TopType()
c t: new TypeVariable("d")
ENV : 
c t: new TypeVariable("d")
Top.isWellFormedTypeIn({a <: Top, c <: d, d <: Top}) should have returned true.
ENV : 
a t: new TypeVariable("d")
c t: new TopType()
d t: new TopType()
ENV : 
a t: new TypeVariable("d")
d t: new TopType()
ENV : 
a t: new TypeVariable("d")
ENV : 
a t: new TypeVariable("d")
c t: new TopType()
ENV : 
a t: new TypeVariable("d")
Top.isWellFormedTypeIn({a <: d, c <: Top, d <: Top}) should have returned true.
ENV : 
b t: new TopType()
c t: new TypeVariable("d")
d t: new TopType()
ENV : 
c t: new TypeVariable("d")
d t: new TopType()
ENV : 
c t: new TypeVariable("d")
ENV : 
b t: new TopType()
c t: new TypeVariable("d")
ENV : 
c t: new TypeVariable("d")
Top.isWellFormedTypeIn({b <: Top, c <: d, d <: Top}) should have returned true.
ENV : 
b t: new TopType()
c t: new TypeVariable("b")
d t: new TopType()
ENV : 
c t: new TypeVariable("b")
d t: new TopType()
ENV : 
c t: new TypeVariable("b")
ENV : 
b t: new TopType()
c t: new TypeVariable("b")
ENV : 
c t: new TypeVariable("b")
Top.isWellFormedTypeIn({b <: Top, c <: b, d <: Top}) should have returned true.
ENV : 
a t: new TopType()
b t: new TopType()
d t: new TypeVariable("b")
ENV : 
b t: new TopType()
d t: new TypeVariable("b")
ENV : 
d t: new TypeVariable("b")
ENV : 
a t: new TopType()
d t: new TypeVariable("b")
ENV : 
d t: new TypeVariable("b")
Top.isWellFormedTypeIn({a <: Top, b <: Top, d <: b}) should have returned true.
ENV : 
a t: new TopType()
c t: new TopType()
d t: new TypeVariable("c")
ENV : 
c t: new TopType()
d t: new TypeVariable("c")
ENV : 
d t: new TypeVariable("c")
ENV : 
a t: new TopType()
d t: new TypeVariable("c")
ENV : 
d t: new TypeVariable("c")
Top.isWellFormedTypeIn({a <: Top, c <: Top, d <: c}) should have returned true.
ENV : 
a t: new TypeVariable("c")
c t: new TopType()
d t: new TopType()
ENV : 
a t: new TypeVariable("c")
d t: new TopType()
ENV : 
a t: new TypeVariable("c")
ENV : 
a t: new TypeVariable("c")
c t: new TopType()
ENV : 
a t: new TypeVariable("c")
Top.isWellFormedTypeIn({a <: c, c <: Top, d <: Top}) should have returned true.
ENV : 
b t: new TypeVariable("c")
c t: new TopType()
d t: new TopType()
ENV : 
b t: new TypeVariable("c")
d t: new TopType()
ENV : 
b t: new TypeVariable("c")
ENV : 
b t: new TypeVariable("c")
c t: new TopType()
ENV : 
b t: new TypeVariable("c")
Top.isWellFormedTypeIn({b <: c, c <: Top, d <: Top}) should have returned true.
ENV : 
a t: new TopType()
b t: new TypeVariable("a")
d t: new TopType()
ENV : 
b t: new TypeVariable("a")
d t: new TopType()
ENV : 
b t: new TypeVariable("a")
ENV : 
a t: new TopType()
b t: new TypeVariable("a")
ENV : 
b t: new TypeVariable("a")
Top.isWellFormedTypeIn({a <: Top, b <: a, d <: Top}) should have returned true.
ENV : 
a t: new TopType()
b t: new TopType()
d t: new TypeVariable("a")
ENV : 
b t: new TopType()
d t: new TypeVariable("a")
ENV : 
d t: new TypeVariable("a")
ENV : 
a t: new TopType()
d t: new TypeVariable("a")
ENV : 
d t: new TypeVariable("a")
Top.isWellFormedTypeIn({a <: Top, b <: Top, d <: a}) should have returned true.
ENV : 
a t: new TypeVariable("b")
b t: new TopType()
c t: new TopType()
ENV : 
a t: new TypeVariable("b")
c t: new TopType()
ENV : 
a t: new TypeVariable("b")
ENV : 
a t: new TypeVariable("b")
b t: new TopType()
ENV : 
a t: new TypeVariable("b")
Top.isWellFormedTypeIn({a <: b, b <: Top, c <: Top}) should have returned true.
ENV : 
b t: new TopType()
c t: new TopType()
d t: new TypeVariable("b")
ENV : 
c t: new TopType()
d t: new TypeVariable("b")
ENV : 
d t: new TypeVariable("b")
ENV : 
b t: new TopType()
d t: new TypeVariable("b")
ENV : 
d t: new TypeVariable("b")
Top.isWellFormedTypeIn({b <: Top, c <: Top, d <: b}) should have returned true.
ENV : 
a t: new TypeVariable("b")
b t: new TopType()
d t: new TopType()
ENV : 
a t: new TypeVariable("b")
d t: new TopType()
ENV : 
a t: new TypeVariable("b")
ENV : 
a t: new TypeVariable("b")
b t: new TopType()
ENV : 
a t: new TypeVariable("b")
Top.isWellFormedTypeIn({a <: b, b <: Top, d <: Top}) should have returned true.
ENV : 
a t: new TopType()
b t: new TypeVariable("d")
d t: new TopType()
ENV : 
b t: new TypeVariable("d")
d t: new TopType()
ENV : 
b t: new TypeVariable("d")
ENV : 
a t: new TopType()
b t: new TypeVariable("d")
ENV : 
b t: new TypeVariable("d")
Top.isWellFormedTypeIn({a <: Top, b <: d, d <: Top}) should have returned true.
ENV : 
a t: new TopType()
b t: new TopType()
c t: new TypeVariable("a")
ENV : 
b t: new TopType()
c t: new TypeVariable("a")
ENV : 
c t: new TypeVariable("a")
ENV : 
a t: new TopType()
c t: new TypeVariable("a")
ENV : 
c t: new TypeVariable("a")
Top.isWellFormedTypeIn({a <: Top, b <: Top, c <: a}) should have returned true.
ENV : 
a t: new TopType()
b t: new TypeVariable("a")
c t: new TopType()
ENV : 
b t: new TypeVariable("a")
c t: new TopType()
ENV : 
b t: new TypeVariable("a")
ENV : 
a t: new TopType()
b t: new TypeVariable("a")
ENV : 
b t: new TypeVariable("a")
Top.isWellFormedTypeIn({a <: Top, b <: a, c <: Top}) should have returned true.
ENV : 
a t: new TopType()
b t: new TopType()
c t: new TypeVariable("b")
ENV : 
b t: new TopType()
c t: new TypeVariable("b")
ENV : 
c t: new TypeVariable("b")
ENV : 
a t: new TopType()
c t: new TypeVariable("b")
ENV : 
c t: new TypeVariable("b")
Top.isWellFormedTypeIn({a <: Top, b <: Top, c <: b}) should have returned true.
ENV : 
a t: new TypeVariable("c")
b t: new TopType()
c t: new TopType()
ENV : 
a t: new TypeVariable("c")
c t: new TopType()
ENV : 
a t: new TypeVariable("c")
ENV : 
a t: new TypeVariable("c")
b t: new TopType()
ENV : 
a t: new TypeVariable("c")
Top.isWellFormedTypeIn({a <: c, b <: Top, c <: Top}) should have returned true.
ENV : 
a t: new TopType()
c t: new TopType()
d t: new TypeVariable("a")
ENV : 
c t: new TopType()
d t: new TypeVariable("a")
ENV : 
d t: new TypeVariable("a")
ENV : 
a t: new TopType()
d t: new TypeVariable("a")
ENV : 
d t: new TypeVariable("a")
Top.isWellFormedTypeIn({a <: Top, c <: Top, d <: a}) should have returned true.
ENV : 
a t: new TopType()
c t: new TypeVariable("a")
d t: new TopType()
ENV : 
c t: new TypeVariable("a")
d t: new TopType()
ENV : 
c t: new TypeVariable("a")
ENV : 
a t: new TopType()
c t: new TypeVariable("a")
ENV : 
c t: new TypeVariable("a")
Top.isWellFormedTypeIn({a <: Top, c <: a, d <: Top}) should have returned true.
ENV : 
a t: new TopType()
b t: new TypeVariable("c")
c t: new TopType()
ENV : 
b t: new TypeVariable("c")
c t: new TopType()
ENV : 
b t: new TypeVariable("c")
ENV : 
a t: new TopType()
b t: new TypeVariable("c")
ENV : 
b t: new TypeVariable("c")
Top.isWellFormedTypeIn({a <: Top, b <: c, c <: Top}) should have returned true.
ENV : 
a t: new TypeVariable("c")
b t: new TopType()
c t: new TypeVariable("b")
ENV : 
a t: new TypeVariable("c")
c t: new TypeVariable("b")
Top.isWellFormedTypeIn({a <: c, b <: Top, c <: b}) should have returned true.
ENV : 
a t: new TypeVariable("b")
b t: new TypeVariable("c")
c t: new TopType()
ENV : 
a t: new TypeVariable("b")
b t: new TypeVariable("c")
Top.isWellFormedTypeIn({a <: b, b <: c, c <: Top}) should have returned true.
ENV : 
a t: new TypeVariable("c")
b t: new TypeVariable("a")
c t: new TopType()
ENV : 
a t: new TypeVariable("c")
b t: new TypeVariable("a")
Top.isWellFormedTypeIn({a <: c, b <: a, c <: Top}) should have returned true.
ENV : 
a t: new TypeVariable("b")
b t: new TopType()
c t: new TypeVariable("b")
ENV : 
a t: new TypeVariable("b")
c t: new TypeVariable("b")
Top.isWellFormedTypeIn({a <: b, b <: Top, c <: b}) should have returned true.
ENV : 
a t: new TopType()
c t: new TypeVariable("a")
d t: new TypeVariable("a")
ENV : 
c t: new TypeVariable("a")
d t: new TypeVariable("a")
Top.isWellFormedTypeIn({a <: Top, c <: a, d <: a}) should have returned true.
ENV : 
a t: new TopType()
b t: new TypeVariable("a")
c t: new TypeVariable("b")
ENV : 
b t: new TypeVariable("a")
c t: new TypeVariable("b")
Top.isWellFormedTypeIn({a <: Top, b <: a, c <: b}) should have returned true.
ENV : 
a t: new TypeVariable("c")
b t: new TypeVariable("c")
c t: new TopType()
ENV : 
a t: new TypeVariable("c")
b t: new TypeVariable("c")
Top.isWellFormedTypeIn({a <: c, b <: c, c <: Top}) should have returned true.
ENV : 
a t: new TopType()
b t: new TypeVariable("a")
c t: new TypeVariable("a")
ENV : 
b t: new TypeVariable("a")
c t: new TypeVariable("a")
Top.isWellFormedTypeIn({a <: Top, b <: a, c <: a}) should have returned true.
ENV : 
a t: new TopType()
b t: new TypeVariable("c")
c t: new TypeVariable("a")
ENV : 
b t: new TypeVariable("c")
c t: new TypeVariable("a")
Top.isWellFormedTypeIn({a <: Top, b <: c, c <: a}) should have returned true.
ENV : 
a t: new TypeVariable("b")
b t: new TypeVariable("d")
d t: new TopType()
ENV : 
a t: new TypeVariable("b")
b t: new TypeVariable("d")
Top.isWellFormedTypeIn({a <: b, b <: d, d <: Top}) should have returned true.
ENV : 
a t: new TypeVariable("d")
b t: new TopType()
d t: new TypeVariable("b")
ENV : 
a t: new TypeVariable("d")
d t: new TypeVariable("b")
Top.isWellFormedTypeIn({a <: d, b <: Top, d <: b}) should have returned true.
ENV : 
a t: new TypeVariable("c")
c t: new TypeVariable("d")
d t: new TopType()
ENV : 
a t: new TypeVariable("c")
c t: new TypeVariable("d")
Top.isWellFormedTypeIn({a <: c, c <: d, d <: Top}) should have returned true.
ENV : 
a t: new TypeVariable("d")
c t: new TopType()
d t: new TypeVariable("c")
ENV : 
a t: new TypeVariable("d")
d t: new TypeVariable("c")
Top.isWellFormedTypeIn({a <: d, c <: Top, d <: c}) should have returned true.
ENV : 
b t: new TypeVariable("d")
c t: new TopType()
d t: new TypeVariable("c")
ENV : 
b t: new TypeVariable("d")
d t: new TypeVariable("c")
Top.isWellFormedTypeIn({b <: d, c <: Top, d <: c}) should have returned true.
ENV : 
b t: new TypeVariable("d")
c t: new TypeVariable("b")
d t: new TopType()
ENV : 
b t: new TypeVariable("d")
c t: new TypeVariable("b")
Top.isWellFormedTypeIn({b <: d, c <: b, d <: Top}) should have returned true.
ENV : 
a t: new TypeVariable("b")
b t: new TopType()
d t: new TypeVariable("b")
ENV : 
a t: new TypeVariable("b")
d t: new TypeVariable("b")
Top.isWellFormedTypeIn({a <: b, b <: Top, d <: b}) should have returned true.
ENV : 
a t: new TopType()
c t: new TypeVariable("d")
d t: new TypeVariable("a")
ENV : 
c t: new TypeVariable("d")
d t: new TypeVariable("a")
Top.isWellFormedTypeIn({a <: Top, c <: d, d <: a}) should have returned true.
ENV : 
a t: new TypeVariable("d")
c t: new TypeVariable("a")
d t: new TopType()
ENV : 
a t: new TypeVariable("d")
c t: new TypeVariable("a")
Top.isWellFormedTypeIn({a <: d, c <: a, d <: Top}) should have returned true.
ENV : 
b t: new TypeVariable("c")
c t: new TypeVariable("d")
d t: new TopType()
ENV : 
b t: new TypeVariable("c")
c t: new TypeVariable("d")
Top.isWellFormedTypeIn({b <: c, c <: d, d <: Top}) should have returned true.
ENV : 
a t: new TypeVariable("d")
b t: new TypeVariable("a")
d t: new TopType()
ENV : 
a t: new TypeVariable("d")
b t: new TypeVariable("a")
Top.isWellFormedTypeIn({a <: d, b <: a, d <: Top}) should have returned true.
ENV : 
b t: new TypeVariable("c")
c t: new TopType()
d t: new TypeVariable("c")
ENV : 
b t: new TypeVariable("c")
d t: new TypeVariable("c")
Top.isWellFormedTypeIn({b <: c, c <: Top, d <: c}) should have returned true.
ENV : 
b t: new TopType()
c t: new TypeVariable("b")
d t: new TypeVariable("b")
ENV : 
c t: new TypeVariable("b")
d t: new TypeVariable("b")
Top.isWellFormedTypeIn({b <: Top, c <: b, d <: b}) should have returned true.
ENV : 
b t: new TopType()
c t: new TypeVariable("b")
d t: new TypeVariable("c")
ENV : 
c t: new TypeVariable("b")
d t: new TypeVariable("c")
Top.isWellFormedTypeIn({b <: Top, c <: b, d <: c}) should have returned true.
ENV : 
a t: new TopType()
b t: new TypeVariable("d")
d t: new TypeVariable("a")
ENV : 
b t: new TypeVariable("d")
d t: new TypeVariable("a")
Top.isWellFormedTypeIn({a <: Top, b <: d, d <: a}) should have returned true.
ENV : 
a t: new TypeVariable("b")
b t: new TopType()
d t: new TypeVariable("a")
ENV : 
a t: new TypeVariable("b")
d t: new TypeVariable("a")
Top.isWellFormedTypeIn({a <: b, b <: Top, d <: a}) should have returned true.
ENV : 
a t: new TypeVariable("c")
c t: new TopType()
d t: new TypeVariable("c")
ENV : 
a t: new TypeVariable("c")
d t: new TypeVariable("c")
Top.isWellFormedTypeIn({a <: c, c <: Top, d <: c}) should have returned true.
ENV : 
a t: new TopType()
b t: new TypeVariable("a")
d t: new TypeVariable("a")
ENV : 
b t: new TypeVariable("a")
d t: new TypeVariable("a")
Top.isWellFormedTypeIn({a <: Top, b <: a, d <: a}) should have returned true.
ENV : 
a t: new TypeVariable("b")
b t: new TopType()
c t: new TypeVariable("a")
ENV : 
a t: new TypeVariable("b")
c t: new TypeVariable("a")
Top.isWellFormedTypeIn({a <: b, b <: Top, c <: a}) should have returned true.
ENV : 
b t: new TypeVariable("c")
c t: new TopType()
d t: new TypeVariable("b")
ENV : 
b t: new TypeVariable("c")
d t: new TypeVariable("b")
Top.isWellFormedTypeIn({b <: c, c <: Top, d <: b}) should have returned true.
ENV : 
a t: new TopType()
b t: new TypeVariable("a")
d t: new TypeVariable("b")
ENV : 
b t: new TypeVariable("a")
d t: new TypeVariable("b")
Top.isWellFormedTypeIn({a <: Top, b <: a, d <: b}) should have returned true.
ENV : 
a t: new TopType()
c t: new TypeVariable("a")
d t: new TypeVariable("c")
ENV : 
c t: new TypeVariable("a")
d t: new TypeVariable("c")
Top.isWellFormedTypeIn({a <: Top, c <: a, d <: c}) should have returned true.
ENV : 
a t: new TypeVariable("c")
c t: new TopType()
d t: new TypeVariable("a")
ENV : 
a t: new TypeVariable("c")
d t: new TypeVariable("a")
Top.isWellFormedTypeIn({a <: c, c <: Top, d <: a}) should have returned true.
ENV : 
b t: new TypeVariable("d")
c t: new TypeVariable("d")
d t: new TopType()
ENV : 
b t: new TypeVariable("d")
c t: new TypeVariable("d")
Top.isWellFormedTypeIn({b <: d, c <: d, d <: Top}) should have returned true.
ENV : 
a t: new TypeVariable("d")
c t: new TypeVariable("d")
d t: new TopType()
ENV : 
a t: new TypeVariable("d")
c t: new TypeVariable("d")
Top.isWellFormedTypeIn({a <: d, c <: d, d <: Top}) should have returned true.
ENV : 
b t: new TopType()
c t: new TypeVariable("d")
d t: new TypeVariable("b")
ENV : 
c t: new TypeVariable("d")
d t: new TypeVariable("b")
Top.isWellFormedTypeIn({b <: Top, c <: d, d <: b}) should have returned true.
ENV : 
a t: new TypeVariable("d")
b t: new TypeVariable("d")
d t: new TopType()
ENV : 
a t: new TypeVariable("d")
b t: new TypeVariable("d")
Top.isWellFormedTypeIn({a <: d, b <: d, d <: Top}) should have returned true.
a.isWellFormedTypeIn({a <: a}) should have returned false.
a.isWellFormedTypeIn({a <: Top, b <: Top, c <: Top}) should have returned true.
a.isWellFormedTypeIn({a <: Top, c <: Top, d <: Top}) should have returned true.
a.isWellFormedTypeIn({a <: Top, b <: Top, d <: Top}) should have returned true.
Too many error messages.
Test NEPROSEL. Spotrebovany cas: 3 s.
